---
- name: prepare
  hosts: all
  gather_facts: no
  become: yes

  tasks:
    - name: disable swap
      shell: swapoff -a

    - name: disable swap in /etc/fstab
      shell: sed -i 's/\(.*swap.*\)/#\1/g' /etc/fstab

    - name: set up hostname
      shell: "{{ item }}"
      loop:
        - "hostname {{ inventory_hostname }}"
        - "echo {{ inventory_hostname }} > /etc/hostname"

    - name: edit /etc/hosts
      lineinfile:
        path: /etc/hosts
        backrefs: yes
        regexp: ^127.0.1.1
        line: "127.0.1.1       {{ inventory_hostname }}"

    - name: packages for installation
      apt:
        name: 
          - gnupg2
          - apt-transport-https
          - curl
          - ca-certificates
        update_cache: yes

    - name: docker
      include_role:
        name: docker
          
    - name: add key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: add k8s repo
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes

    # - name: add br_netfilter module
    #   modprobe:
    #     name: br_netfilter
    #     state: present

    # - name: enable permanent br_netfilter
    #   copy:
    #     dest: /etc/modules-load.d/br_netfilter.conf
    #     content: |
    #       br_netfilter
          
    # - name: enable forwarding
    #   copy:
    #     dest: /etc/sysctl.d/9999-router.conf
    #     content: |
    #       net.ipv4.ip_forward = 1
    #   notify: sysctl reload

    - name: k8s packages
      apt:
        name: 
          - "kubelet={{ k1ansible_version }}"
          - "kubeadm={{ k1ansible_version }}"
          - kubernetes-cni
          - containerd
        state: present
    
    - name: hold k8s package versions
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
    

  #   - name: set up docker
  #     copy:
  #       content: |
  #         {
  #           "userland-proxy": false,
  #           "exec-opts": ["native.cgroupdriver=systemd"]
  #         }
  #       dest: /etc/docker/daemon.json
  #     notify: restart docker
            
  handlers:
    - name: sysctl reload
      command: sysctl --system

    # - name: restart docker
    #   systemd:
    #     name: docker
    #     state: restarted
...